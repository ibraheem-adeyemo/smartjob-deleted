{"version":3,"file":"addressController.js","names":["_Responses","_interopRequireDefault","require","_constants","_models","_user","_addressService","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","_filterInstanceProperty","call","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","_context5","_context6","source","_forEachInstanceProperty","Object","key","_defineProperty2","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","createAddressController","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","user","addressRes","wrap","_callee$","_context","prev","locals","createAddress","userId","id","body","sent","Responses","setSuccess","ADDRESS_CREATED_SUCCESSFULLY","data","send","t0","console","log","message","constStrings","databaseError","statusCode","stop","_x","_x2","_x3","exports","getNearestAddressController","_ref2","_callee2","_callee2$","_context2","error","_x4","_x5","_x6","updateAddressController","_ref3","_callee3","_context3","addressId","_req$body","country","state","city","subUrb","_long","lat","addressObj","dbAddress","updatedAddress","_callee3$","_context4","query","long","location","type","coordinates","longitude","latitude","coordinate","_concat","concat","Address","findByPk","abrupt","ADDRESS_CAN_NOT_BE_FOUND","update","where","ADDRESS_UPDATED_SUCCESSFULLY","_x7","_x8","_x9"],"sources":["../../src/controllers/addressController.js"],"sourcesContent":["import Responses from '../utils/Responses'\r\nimport {constStrings} from '../constants';\r\nimport { Address } from '../../dbase/models'\r\nimport { ADDRESS_CREATED_SUCCESSFULLY,\r\n     ADDRESS_ALREADY_CREATED,\r\n     ADDRESS_CAN_NOT_BE_FOUND,\r\n     ADDRESS_UPDATED_SUCCESSFULLY\r\n    } from '../constants'\r\nimport { findUserAddress } from '../services/user';\r\nimport { createAddress } from '../services/addressService';\r\n\r\nexport const createAddressController = async (req, res, next) => {\r\n    try {\r\n        const { user } = res.locals\r\n        \r\n        const addressRes = await createAddress({userId:user.id, ...req.body}, next)\r\n\r\n        Responses.setSuccess(201, ADDRESS_CREATED_SUCCESSFULLY, {data:addressRes})\r\n        Responses.send(res)\r\n    } catch (error) {\r\n        console.log(error)\r\n        next({message:constStrings.databaseError, statusCode:500});\r\n    }\r\n}\r\n\r\nexport const getNearestAddressController = async (req, res, next) => {\r\n    try {\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const updateAddressController = async (req, res, next) => {\r\n    try {\r\n        const { addressId } = req.query\r\n        const { user } = res.locals\r\n        const { country, state, city, subUrb, long, lat } = req.body\r\n        const addressObj = {\r\n            country,\r\n            state,\r\n            city,\r\n            subUrb,\r\n            location: {type:'Point', coordinates:[long,lat]},\r\n            longitude:long,\r\n            latitude:lat,\r\n            userId:user.id,\r\n            coordinate:`${long} ${lat}`\r\n        }\r\n\r\n        const dbAddress = await Address.findByPk(addressId)\r\n\r\n        if(dbAddress.userId !== user.id) {\r\n            return next({statusCode:404, message: ADDRESS_CAN_NOT_BE_FOUND })\r\n        }\r\n\r\n        await Address.update(addressObj, {\r\n            where: {id:addressId}\r\n        })\r\n        const updatedAddress = await Address.findByPk(addressId)\r\n\r\n        Responses.setSuccess(201, ADDRESS_UPDATED_SUCCESSFULLY, updatedAddress)\r\n        Responses.send(res)\r\n    } catch (error) {\r\n        next({message:error.message, statusCode:500})\r\n    }\r\n}"],"mappings":"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"}