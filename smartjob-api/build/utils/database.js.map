{"version":3,"file":"database.js","names":["_sequelize","require","_console","_context","_context2","_context3","_context4","dbPassword","process","env","DB_PASSWORD","dbHost","DB_HOST","dbPort","DB_PORT","dbName","DB_NAME","dbUser","DB_USER","sequelize","Sequelize","_concat","concat","call","checkConnection","_ref","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context5","prev","next","authenticate","debug","t0","stop","apply","arguments","_default","exports"],"sources":["../../src/utils/database.js"],"sourcesContent":["import { Sequelize } from \"sequelize\";\r\nimport {debug} from 'console'\r\n\r\n\r\n// const sequelize = new Sequelize('sql7603424', 'sql7603424', 'D5FyPRGU1b', {\r\n//     host:'sql7.freesqldatabase.com',\r\n//     dialect: 'mysql'\r\n// });\r\n\r\nconst dbPassword = process.env.DB_PASSWORD\r\nconst dbHost = process.env.DB_HOST\r\nconst dbPort = process.env.DB_PORT\r\nconst dbName = process.env.DB_NAME\r\nconst dbUser = process.env.DB_USER\r\n\r\n// const dbPswd = process.env.DB_PASSWORD\r\n// const dbHost = process.env.DB_HOST\r\n// const dbName = process.env.DB_NAME\r\n// const dbUser = process.env.DB_USER\r\n// const dbDialect = process.env.DB_DIALECT\r\n\r\n// // console.log(host,pswd)\r\n// let sequelize = new Sequelize(dbName, dbUser, dbPassword, {\r\n//     host:dbHost,\r\n//     dialect: 'postgres'\r\n// });\r\n\r\nconst sequelize = new Sequelize(`postgres://${dbUser}:${dbPassword}@${dbHost}:${dbPort}/${dbName}`)\r\n\r\n// const sequelize = new Sequelize(process.env.POSTGRES_URL)\r\n\r\nconst checkConnection = async ()=> {\r\n    try {\r\n        await sequelize.authenticate();\r\n        debug(`DB connected successfully`)\r\n    } catch (error) {\r\n        debug('Unable to connect to the DB')\r\n    }\r\n}\r\n\r\ncheckConnection()\r\n\r\nexport default sequelize;"],"mappings":";;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAA6B,IAAAE,QAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA;AAG7B;AACA;AACA;AACA;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,WAAW;AAC1C,IAAMC,MAAM,GAAGH,OAAO,CAACC,GAAG,CAACG,OAAO;AAClC,IAAMC,MAAM,GAAGL,OAAO,CAACC,GAAG,CAACK,OAAO;AAClC,IAAMC,MAAM,GAAGP,OAAO,CAACC,GAAG,CAACO,OAAO;AAClC,IAAMC,MAAM,GAAGT,OAAO,CAACC,GAAG,CAACS,OAAO;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,IAAIC,oBAAS,KAAAC,OAAA,aAAAlB,QAAA,OAAAkB,OAAA,aAAAjB,SAAA,OAAAiB,OAAA,aAAAhB,SAAA,OAAAgB,OAAA,aAAAf,SAAA,iBAAAgB,MAAA,CAAeL,MAAM,QAAAM,IAAA,CAAAjB,SAAA,EAAIC,UAAU,QAAAgB,IAAA,CAAAlB,SAAA,EAAIM,MAAM,QAAAY,IAAA,CAAAnB,SAAA,EAAIS,MAAM,QAAAU,IAAA,CAAApB,QAAA,EAAIY,MAAM,EAAG;;AAEnG;;AAEA,IAAMS,eAAe;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAA;IAAA,OAAAF,YAAA,YAAAG,IAAA,UAAAC,SAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAAF,SAAA,CAAAC,IAAA;UAAAD,SAAA,CAAAE,IAAA;UAAA,OAEVf,SAAS,CAACgB,YAAY,EAAE;QAAA;UAC9B,IAAAC,cAAK,8BAA6B;UAAAJ,SAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,SAAA,CAAAC,IAAA;UAAAD,SAAA,CAAAK,EAAA,GAAAL,SAAA;UAElC,IAAAI,cAAK,EAAC,6BAA6B,CAAC;QAAA;QAAA;UAAA,OAAAJ,SAAA,CAAAM,IAAA;MAAA;IAAA,GAAAT,OAAA;EAAA,CAE3C;EAAA,gBAPKL,eAAeA,CAAA;IAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOpB;AAEDhB,eAAe,EAAE;AAAA,IAAAiB,QAAA,GAEFtB,SAAS;AAAAuB,OAAA,cAAAD,QAAA"}