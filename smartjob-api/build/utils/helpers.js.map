{"version":3,"file":"helpers.js","names":["_multer","_interopRequireDefault","require","_nodemailer","_bcrypt","_jsonwebtoken","_courier","_constants","_fastTwoSms","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","_filterInstanceProperty","call","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","_context8","_context9","source","_forEachInstanceProperty","Object","key","_defineProperty2","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","config","senderEmail","process","env","EMAIL","secret","SECRET","passwd","EMAIL_PASSWORD","authToken","COURIER_AUTH_TOKEN","hostUrl","HOST_URL","nodeMailerHost","NODE_MAILER_HOST","smsAPIUrl","SMS_API_URL","rapidAPIKey","RAPID_API_KEY","rapidAPIHost","RAPID_API_HOST","storage","multer","diskStorage","destination","req","file","cb","filename","originalname","uploads","exports","hashPassword","_ref","_asyncToGenerator2","_regenerator","mark","_callee","password","wrap","_callee$","_context","prev","next","bcrypt","hash","abrupt","sent","stop","_x","generateToken","payload","jwtSecret","undefined","console","log","token","jwt","sign","expiresIn","verifyToken","decoded","verify","sendEmail","_ref2","_callee2","transport","emailData","emailRes","_callee2$","_context2","sendMail","from","concat","to","recipientEmail","subject","html","body","t0","JSON","parse","_stringify","_x2","_x3","generateOTP","num","digits","OTP","Math","floor","random","sendOTP","_ref4","_callee3","_ref3","message","phoneNum","res","_callee3$","_context3","fast2sms","sendMessage","authorization","FAST2SMS","numbers","_x4","_x5","axios","sendSmsOtp","_ref5","phoneNumber","options","method","url","params","verifyCode","headers","request","then","response","data","error","transporter","nodemailer","createTransport","host","port","secure","requireTLS","auth","user","pass","composeVerificationMail","mailType","_context4","_context5","_context6","_context7","otp","userId","userFullName","constStrings","verifyEmail","_concat","forgetPassword","email","hashedSecret","courier","CourierClient","authorizationToken","courierMailSender","send","user_id","name","tokk","content","routing","channels","mailContent"],"sources":["../../src/utils/helpers.js"],"sourcesContent":["import multer from 'multer';\r\nimport nodemailer from 'nodemailer';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { CourierClient } from '@trycourier/courier'\r\nimport { constStrings } from '../constants';\r\nimport fast2sms from 'fast-two-sms'\r\n\r\nrequire('dotenv').config();\r\n\r\nconst senderEmail = process.env.EMAIL;\r\nconst secret = process.env.SECRET;\r\nconst passwd = process.env.EMAIL_PASSWORD\r\n// const eventId = process.env.COURIER_EVENT_ID\r\n// const recipientId = process.env.COURIER_RECIPIENT_ID\r\nconst authToken = process.env.COURIER_AUTH_TOKEN\r\n// const mailTrapUser = process.env.MAIL_TRAP_USER\r\n// const mailTrapPassword = process.env.MAIL_TRAP_PASS\r\nconst hostUrl = process.env.HOST_URL\r\nconst nodeMailerHost = process.env.NODE_MAILER_HOST\r\nconst smsAPIUrl = process.env.SMS_API_URL\r\nconst rapidAPIKey=process.env.RAPID_API_KEY\r\nconst rapidAPIHost=process.env.RAPID_API_HOST\r\n\r\n// SET STORAGE\r\nvar storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'uploads/')\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, file.originalname)\r\n  }\r\n})\r\nexport const uploads = multer({ storage: storage })\r\n\r\nexport const hashPassword = async (password) => {\r\n    return await bcrypt.hash(password, 10)\r\n}\r\n\r\nexport const generateToken = (payload, jwtSecret=secret) => {\r\n    console.log(payload)\r\n    const token = jwt.sign(payload, jwtSecret, {\r\n        expiresIn: '1hr'\r\n    })\r\n    return token;\r\n}\r\n\r\nexport const verifyToken = (token, jwtSecret=secret) => {\r\n    const decoded = jwt.verify(token, jwtSecret)\r\n    return decoded\r\n}\r\n\r\nexport const sendEmail = async (transport, emailData) => {\r\n    \r\n  try {\r\n    const emailRes = await transport.sendMail({\r\n        from: `\"Smartract \"<${senderEmail}>`, // sender address\r\n        to: `${emailData.recipientEmail}`,\r\n        subject: `${emailData.subject}`, // Subject line\r\n        html: `${emailData.body}`\r\n      });\r\n    \r\n  } catch (error) {\r\n    console.log(JSON.parse(JSON.stringify(error)));\r\n  }\r\n}\r\n\r\nexport const generateOTP = (num) => {\r\n    const digits = \"0123456789\"\r\n    let OTP = \"\"\r\n    for(let i=0; i<num; i++) {\r\n        OTP += digits[Math.floor(Math.random() * 10)]\r\n    }\r\n    return OTP;\r\n}\r\n\r\nexport const sendOTP = async ({message, phoneNum}, next) => {\r\n    try {\r\n        const res = await fast2sms.sendMessage({\r\n            authorization: FAST2SMS,\r\n            message,\r\n            numbers: [phoneNum],\r\n        })\r\n    } catch(err) {\r\n        next(err)\r\n    }\r\n}\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const sendSmsOtp = ({phoneNumber, OTP}, next) => {\r\n    const options = {\r\n        method: 'POST',\r\n        url: smsAPIUrl,\r\n        params: {phoneNumber, verifyCode: OTP},\r\n        headers: {\r\n          'X-RapidAPI-Key': rapidAPIKey,\r\n          'X-RapidAPI-Host': rapidAPIHost\r\n        }\r\n      };\r\n      \r\n      axios.request(options).then(function (response) {\r\n          console.log(response.data);\r\n      }).catch(function (error) {\r\n          console.error(error);\r\n          next(error)\r\n      });\r\n}\r\n\r\n\r\nexport const transporter = () => nodemailer.createTransport({\r\n  host: nodeMailerHost,\r\n  port: 465,\r\n  secure: true,\r\n  requireTLS: true,\r\n  auth: {\r\n    user: senderEmail,\r\n    pass: passwd\r\n  },\r\n//   tls: {\r\n//     rejectUnauthorized: false\r\n//   }\r\n//   host: \"sandbox.smtp.mailtrap.io\",\r\n//   port: 2525,\r\n//   auth: {\r\n//     user: mailTrapUser,\r\n//     pass: mailTrapPassword\r\n//   }\r\n});\r\n\r\nexport const composeVerificationMail = (emailData, mailType) => {\r\n    \r\n    const { recipientEmail, otp, userId, host, userFullName } = emailData\r\n    \r\n    switch (mailType) {\r\n        case constStrings.verifyEmail:\r\n            return {\r\n                recipientEmail: `${recipientEmail}`,\r\n                subject: 'Email verification',\r\n                body: `<div>\r\n                  Hi ${userFullName} Thank you for Creating an account on SMARTRACT. <br/> continue your registration by copy and paste the OTP below.<br/>\r\n                  your OTP is ${otp}\r\n                  </div>`\r\n              };\r\n        case constStrings.forgetPassword:\r\n            return {\r\n                recipientEmail: `${recipientEmail}`,\r\n                subject: 'Password reset link',\r\n                body: `<div>\r\n                Hi ${email} Kindly click on the link below to reset your password.<br /><br/>\r\n                <a href='${hostUrl}/api/v1/users/resetPassword/${userId}/${hashedSecret}'>Reset password</a> <br /> \r\n                </div>`\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  const courier = CourierClient({ authorizationToken: authToken });\r\n//   courier.send({\r\n//    eventId, // your Notification ID\r\n//    recipientId, // usually your system's User ID\r\n//    profile: {\r\n//      email: \"<EMAIL_ADDRESS>\"\r\n//    },\r\n//    data: {} ,// optional variables for merging into templates \r\n//     }).then((resp) => {\r\n//      console.log('Email sent', resp)\r\n//    })\r\n//    .catch((error) => {\r\n//      console.error(error)\r\n//    });\r\n\r\nexport const courierMailSender = (emailData) => courier.send({\r\n    message: {\r\n        to: [\r\n            {\r\n                user_id: \"<USER_ID>\", // usually your system's User ID associated to a Courier profile\r\n                email: \"test@email.com\",\r\n                data: {\r\n                  name: \"some user's name\",\r\n                },\r\n              },\r\n        ],\r\n        tokk: {\r\n            data: {\r\n                name: 'emailData?.name'\r\n            },\r\n            email: emailData.recipientEmail\r\n        },\r\n        content: {\r\n            ...emailData.content\r\n        },\r\n        routing: {\r\n            method: \"single\",\r\n            channels: [\"email\"],\r\n        }\r\n    }\r\n})\r\n\r\nexport const sendMail = (emailData, mailType) => {\r\n    \r\n    const mailContent = composeVerificationMail(emailData, mailType )\r\n    console.log(mailContent)\r\n    sendEmail(transporter(), mailContent)\r\n}\r\n"],"mappings":"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"}