{"version":3,"file":"user.js","names":["_models","require","_ErrorResponse","_function","createUser","_ref","_asyncToGenerator2","_regenerator","mark","_callee","userObj","_context","response","res","userData","userActivationRes","wrap","_callee$","_context2","prev","next","User","create","sent","UserActivation","hashedSecret","generateRandomString","userId","id","expiredOn","_now","firstName","lastName","email","phoneNumber","isVerified","createdAt","updatedAt","fullName","_concat","concat","call","abrupt","t0","Error","stop","_x","apply","arguments","exports","login","loginObj","findOne","where","getAuserWithPK","findByPk","findUserByEmail","addOTPtoDB","otp","length","undefined","udpdateUser","_ref2","_callee2","_callee2$","_context3","update","_x2","findUserAddress","_ref3","_callee3","_callee3$","_context4","Address","findAll","_x3"],"sources":["../../src/services/user.js"],"sourcesContent":["import { User, UserActivation, Address } from '../../dbase/models'\r\nimport { ErrorResponse } from '../utils/ErrorResponse'\r\nimport { generateRandomString } from '../utils/function';\r\n\r\nexport const createUser = async (userObj) => {\r\n    try { \r\n    const response = await User.create(userObj);\r\n\r\n    const res = await  UserActivation.create({hashedSecret: generateRandomString(60), userId:response.id, expiredOn:Date.now()+21600000})\r\n   const userData = {\r\n                id:response.id, \r\n                firstName:response.firstName, \r\n                lastName:response.lastName, \r\n                email:response.email, \r\n                phoneNumber:response.phoneNumber,\r\n                isVerified:response.isVerified,\r\n                createdAt: response.createdAt,\r\n                updatedAt: response.updatedAt,\r\n                fullName: `${response.firstName} ${response.lastName}`\r\n            }\r\n           \r\n    const userActivationRes = {\r\n                        hashedSecret: res.hashedSecret,\r\n                        expiredOn: res.expiredOn,\r\n                        createdAt: res.createdAt,\r\n                        updatedAt: res.updatedAt\r\n                    }\r\n                    \r\n    return {\r\n        userData, userActivationRes\r\n    }\r\n\r\n      \r\n    // const response = await User.create(userObj)\r\n    \r\n    // const userResponse = {\r\n    //     id:response.id,\r\n    //     firstName: response.firstName,\r\n    //     lastName: response.lastName,\r\n    //     userEmail:response.email\r\n    // }\r\n    // return {status: 'Success', userResponse}\r\n      \r\n    } catch (error) {\r\n        \r\n        throw new Error('Error from database')\r\n    }\r\n}\r\n\r\nexport const login = (loginObj) => {\r\n    const { email } = loginObj\r\n    return User.findOne({ where: { email }})\r\n}\r\n\r\nexport const getAuserWithPK = (id) => {\r\n    return User.findByPk(id)\r\n}\r\n\r\nexport const findUserByEmail = (email) => {\r\n    return User.findOne({ where:{email}})\r\n}\r\n\r\nexport const addOTPtoDB = (otp, userId, expiredOn=Date.now()+21600000) => {\r\n    return UserActivation.create({otp, userId, expiredOn});\r\n}\r\nexport const udpdateUser = async (email) => {\r\n    return User.update(\r\n        {isVerified: true},\r\n        {where: {email}}\r\n    )\r\n}\r\nexport const findUserAddress = async (userId) => {\r\n    return Address.findAll({\r\n        where: {userId}\r\n    })\r\n}\r\n"],"mappings":"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"}