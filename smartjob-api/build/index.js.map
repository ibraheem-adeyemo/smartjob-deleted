{"version":3,"file":"index.js","names":["_express","_interopRequireDefault","require","_cors","_bodyParser","_morgan","_nodeNotifier","_Responses","_userRoute","_jobRoute","_console","_database","_serviceRoute","_errorHandlers","_workRoute","_addressRoute","config","app","express","isProduction","process","env","NODE_ENV","use","cors","bodyParser","urlencoded","extended","json","errorNotification","err","str","req","_context","title","_concat","concat","method","call","url","notifier","notify","msg","morgan","apiVersion","userRoute","jobRoute","serviceRoute","workRoute","addressRoute","get","res","Responses","setSuccess","send","all","setError","next","statusCode","console","log","JSON","parse","_stringify","status","debug","stack","error","message","sync","_ref","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context2","prev","sequelize","abrupt","sent","stop","apply","arguments","server","listen","PORT","address","port","_default","exports"],"sources":["../src/index.js"],"sourcesContent":["require('dotenv').config();\r\nimport express from 'express'\r\nimport cors from 'cors'\r\nimport bodyParser from 'body-parser';\r\nimport morgan from 'morgan';\r\n// import errorHandler from 'errorhandler';\r\nimport notifier from 'node-notifier'\r\nimport Responses from './utils/Responses';\r\nimport userRoute from './routes/userRoute';\r\nimport jobRoute from './routes/jobRoute';\r\nimport { debug } from 'console';\r\nimport sequelize from './utils/database';\r\nimport serviceRoute from './routes/serviceRoute';\r\nimport { errorHandler } from './middlewares/errorHandlers';\r\nimport workRoute from './routes/workRoute';\r\nimport addressRoute from './routes/addressRoute';\r\n\r\n\r\nconst app = express();\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\n\r\napp.use(cors())\r\n\r\n// Express configuration\r\napp.use(bodyParser.urlencoded({extended:false}))\r\napp.use(bodyParser.json());\r\n\r\n// Express multer configuration for the file upload\r\n\r\nconst errorNotification = (err, str, req) => {\r\n    const title = `Error in ${req.method} ${req.url}`\r\n\r\n    notifier.notify({\r\n        title,\r\n        msg: str\r\n    })\r\n}\r\n\r\nif(!isProduction){\r\n    // app.use(errorHandler({log:errorNotification}))\r\n    app.use(morgan('dev'))    \r\n}\r\n\r\nconst apiVersion = '/api/v1'\r\n\r\napp.use(apiVersion, userRoute)\r\napp.use(apiVersion, jobRoute)\r\napp.use(apiVersion, serviceRoute)\r\napp.use(apiVersion, workRoute)\r\napp.use(apiVersion, addressRoute)\r\n\r\napp.get('/', (req, res) => {\r\n    Responses.setSuccess(200, 'Welcome to your smart job portal');\r\n    Responses.send(res)\r\n})\r\n\r\napp.all('/*', (req, res)=>{\r\n    Responses.setError(404, 'The requested url was not found on this server')\r\n    Responses.send(res)\r\n})\r\n\r\napp.use((err, req, res, next) => {\r\n    const statusCode = err.statusCode ? err.statusCode : 500;\r\n\r\n    console.log(JSON.parse(JSON.stringify(err)))\r\n    res.status(statusCode).json({\r\n        err\r\n    })\r\n\r\n})\r\n\r\nif(!isProduction){\r\n    app.use((err, req, res) => {\r\n        debug(err.stack)\r\n\r\n        res.status(err.status || 500)\r\n\r\n        res.json({\r\n            error: {\r\n                message: err.message,\r\n                error:err\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nconst sync = async () => await sequelize.sync();\r\nsync()\r\n\r\n\r\nconst server = app.listen(process.env.PORT||8080, \"0.0.0.0\", ()=> {\r\n    debug(`Listen on port ${server.address().port}`)\r\n})\r\n\r\nexport default server;\r\n"],"mappings":"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"}