{"version":3,"file":"authMiddleware.js","names":["_models","require","_helpers","_Responses","_interopRequireDefault","_constants","isUserExist","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","email","user","wrap","_callee$","_context","prev","body","User","findOne","where","sent","Responses","setError","send","stop","_x","_x2","_x3","apply","arguments","exports","isLoggedIn","_ref2","_callee2","authorization","payload","userRes","_callee2$","_context2","headers","verifyToken","split","findByPK","id","userObj","t0","_x4","_x5","_x6","isUserVerified","_ref3","_callee3","_callee3$","_context3","error","console","log","_x7","_x8","_x9","isAuthenticated","_ref4","_callee4","token","_callee4$","_context4","status","message","AUTH_HEADER_MISSING_ERR","abrupt","AUTH_TOKEN_MISSING_ERR","JWT_DECODE_ERR","findByPk","USER_NOT_FOUND_ERR","locals","_x10","_x11","_x12","isUserVerifiedAndAuthenticated","_ref5","_callee5","_callee5$","_context5","isVerified","statusCode","ACCOUNT_HAS_NOT_BEEN_VERIFIED","_x13","_x14","_x15","isEmailVerified","_ref6","_callee6","_callee6$","_context6","_x16","_x17","_x18","isPhoneNumberAlreadyExist","_ref7","_callee7","phoneNumber","_callee7$","_context7","PHONE_ALREADY_EXISTS_ERR","_x19","_x20","_x21"],"sources":["../../src/middlewares/authMiddleware.js"],"sourcesContent":["import { User } from '../../dbase/models'\r\nimport { verifyToken } from '../utils/helpers'\r\nimport Responses from '../utils/Responses';\r\n\r\nimport { PHONE_ALREADY_EXISTS_ERR,\r\n    AUTH_HEADER_MISSING_ERR, \r\n    AUTH_TOKEN_MISSING_ERR,\r\n    USER_NOT_FOUND_ERR,\r\n    ACCOUNT_HAS_NOT_BEEN_VERIFIED } from '../constants'\r\n\r\nexport const isUserExist = async (req, res, next) => {\r\n    const {email } = req.body\r\n    const user = await User.findOne({where:{email}})\r\n    \r\n    if (!user) {\r\n        next()\r\n    } else {\r\n        Responses.setError(302, 'Kindly login as this email is registered to an account or use another email to create account')\r\n        Responses.send(res)\r\n    }\r\n}\r\n\r\nexport const isLoggedIn = async (req, res, next) => {\r\n    try {\r\n        const { authorization } = req.headers\r\n    \r\n        const payload = verifyToken(authorization.split(' ')[1])\r\n\r\n        if(payload.email) {\r\n            const userRes = await User.findByPK(payload.id);            \r\n            if(payload.email === userRes.email) {\r\n                req.userObj = userRes\r\n\r\n                next()\r\n            } else {\r\n\r\n            }\r\n        }\r\n    } catch (error) {\r\n        Responses.setError(401, 'Token has expired or invalid')\r\n        Responses.send(res)\r\n    }\r\n}\r\n\r\nexport const isUserVerified = async (req, res, next) => {\r\n    try {\r\n        const { authorization } = req.headers\r\n    \r\n        const payload = verifyToken(authorization.split(' ')[1])\r\n\r\n    } catch (error) {\r\n       console.log(error) \r\n    }\r\n}\r\n\r\nexport const isAuthenticated = async (req, res, next) => {\r\n    try {\r\n        const { authorization } = req.headers\r\n        if(!authorization) {\r\n            next({status:403, message:AUTH_HEADER_MISSING_ERR});\r\n            return\r\n        }\r\n\r\n        const token = authorization.split(' ')[1]     \r\n        if(!token) {\r\n            next({status:403, message:AUTH_TOKEN_MISSING_ERR})\r\n            return\r\n        }\r\n\r\n        const payload = verifyToken(token);\r\n        if(!payload) {\r\n            next({status:403, message:JWT_DECODE_ERR});\r\n            return\r\n        }\r\n\r\n        const user = await User.findByPk(payload.id);\r\n\r\n        \r\n        if(!user) {\r\n            next({status:404, message:USER_NOT_FOUND_ERR})\r\n            return\r\n        }          \r\n        res.locals.user = user;\r\n        next()\r\n        return user\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\nexport const isUserVerifiedAndAuthenticated = async (req, res, next) => {\r\n    try {\r\n        \r\n        const user = await isAuthenticated(req, res, next)\r\n        if(!user.isVerified) {\r\n            return next({statusCode:400, message:ACCOUNT_HAS_NOT_BEEN_VERIFIED})\r\n        }\r\n        res.locals.user = user;\r\n        next()\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\nexport const isEmailVerified = async (req, res, next) => {\r\n    try {\r\n        const {email } = req.body\r\n        const user = await User.findOne({where:{email}})\r\n\r\n        if(!user) {\r\n            return next({statusCode:400, message:USER_NOT_FOUND_ERR})\r\n        }\r\n        \r\n        if(!user.isVerified) {\r\n            return next({statusCode:400, message:ACCOUNT_HAS_NOT_BEEN_VERIFIED})\r\n        }\r\n        next()\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\nexport const isPhoneNumberAlreadyExist = async (req, res, next) => {\r\n    try {\r\n        const {phoneNumber } = req.body\r\n        const user = await User.findOne({where:{phoneNumber}})\r\n        if(user) return next({status:403, message:PHONE_ALREADY_EXISTS_ERR})\r\n        \r\n        next()\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}"],"mappings":"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"}